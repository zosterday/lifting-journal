@page
@using LiftingJournal.Extensions;
@using LiftingJournal.Models;
@model LiftingJournal.Pages.Lifts.IndexModel

@{
    ViewData["Title"] = "Index";
}

<partial name="_Notification" />

<h1>Recent Lifts</h1>

<p>
    <a asp-page="Create" class="btn btn-primary">
        Add Lift Entry
    </a>
</p>

<form class="form-inline my-2 my-lg-0">
    <select id="LiftTypeDropdown" style="width: 250px;" asp-for="LiftTypeFilter">
        <option value="">Any</option>
        @foreach (var liftType in (LiftType[])Enum.GetValues(typeof(LiftType)))
        {
            <option value="@((int)liftType)">@liftType.GetDisplayName()</option>
        }
    </select>
    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Filter</button>
</form>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th style="color: white;">
                @Html.DisplayNameFor(model => model.Lifts[0].DateLifted)
            </th>
            <th style="color: white;">
                @Html.DisplayNameFor(model => model.Lifts[0].LiftType)
            </th>
            <th style="color: white;">
                @Html.DisplayNameFor(model => model.Lifts[0].Weight)
            </th>
            <th style="color: white;">
                @Html.DisplayNameFor(model => model.Lifts[0].Sets)
            </th>
            <th style="color: white;">
                @Html.DisplayNameFor(model => model.Lifts[0].Reps)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Lifts)
        {
            <tr>
                <td style="color: white;">
                    @Html.DisplayFor(modelItem => item.DateLifted)
                </td>
                <td style="color: white;">
                    @Html.DisplayFor(modelItem => item.LiftType)
                </td>
                <td style="color: white;">
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td style="color: white;">
                    @Html.DisplayFor(modelItem => item.Sets)
                </td>
                <td style="color: white;">
                    @Html.DisplayFor(modelItem => item.Reps)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav>
    <ul class="pagination">
            @for(var i = 1; i <= Model.TotalPages; i++)
            {
                string active = string.Empty;
                if (i == Model.PageIndex)
                {
                    active = "active";    
                }
                <li class="page-item @active" aria-current="page">
                <a class="page-link" href="?pageIndex=@(i)&liftTypeFilter=@(Model.LiftTypeFilter)">@i</a>
                </li>
            }
    </ul>
</nav>